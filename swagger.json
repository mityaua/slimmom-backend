{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Slimmom-Backend",
    "description": "Documentation for API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://slimmom-backend-fs26.herokuapp.com/" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Products",
      "description": "Search specified product endpoint"
    },
    {
      "name": "Daily-rate",
      "description": "Daily-rate endpoints"
    },
    {
      "name": "Day",
      "description": "Day endpoints"
    },
    {
      "name": "User",
      "description": "User endpoint"
    }
  ],

  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided login already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Login or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          }
        }
      }
    },
    "/products?search={название}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get specified product",
        "parameters": [
          {
            "name": "search",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product is not found",
            "content": {}
          }
        }
      }
    },
    "/daily-rate": {
      "post": {
        "tags": ["Daily-rate"],
        "summary": "Get user's daily rate (not registered user)",
        "parameters": [],
        "requestBody": {
          "description": "Stats object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyRateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/daily-rate/{userId}": {
      "post": {
        "tags": ["Daily-rate"],
        "summary": "Get user's daily rate (registered user)",
        "parameters": [
          {
            "name": "userId",
            "in": "path"
          }
        ],
        "requestBody": {
          "description": "Stats object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DailyRateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyRateRegUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/day": {
      "post": {
        "tags": ["Day"],
        "summary": "Add product",
        "parameters": [],
        "requestBody": {
          "description": "Product info object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DayAddProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayAddProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Product is not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Day"],
        "summary": "Delete product",
        "parameters": [],
        "requestBody": {
          "description": "Product delete object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DayDeleteProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DayDeleteProductResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Product is not found",
            "content": {}
          }
        }
      }
    },
    "/day/info": {
      "post": {
        "tags": ["Day"],
        "summary": "Date",
        "parameters": [],
        "requestBody": {
          "description": "Date object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "User info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "No user found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "login", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Krabaton"
          },
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "Krabaton2000"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Registartion status",
            "example": "success"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["login", "password"],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "Krabaton2000"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "required": ["login", "password"],
        "properties": {
          "login": {
            "type": "string",
            "description": "User's login",
            "example": "Krabaton2000"
          },
          "accessToken": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTAxYWFiZGQxZjQ0ZjU0NjhkN2VlZjIiLCJpYXQiOjE2Mjc0OTkyMTV9.oVa5pYh0RERJwdrZwbOh0_APJL6T39_6x3JozV6wkpA"
          }
        }
      },
      "ProductsResponse": {
        "type": "object",
        "properties": {
          "Product": {
            "type": "string",
            "description": "Product",
            "example": "<Name of the product>"
          }
        }
      },
      "DailyRateRequest": {
        "type": "object",
        "required": [
          "currentWeight",
          "height",
          "age",
          "desiredWeight",
          "bloodType"
        ],
        "properties": {
          "currentWeight": {
            "type": "number",
            "description": "User's current weight",
            "example": "60"
          },
          "height": {
            "type": "number",
            "description": "User's height",
            "example": "165"
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": "25"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desired weight",
            "example": "55"
          },
          "bloodType": {
            "type": "number",
            "description": "User's blood type",
            "example": "4"
          }
        }
      },
      "DailyRateResponse": {
        "type": "object",
        "properties": {
          "dailyRate": {
            "type": "number",
            "description": "Calories",
            "example": "1500"
          },
          "notAllowedProducts": {
            "type": "array",
            "description": "Some not allowed products",
            "example": ["names of the products"]
          },
          "notAllowedProductsAll": {
            "type": "array",
            "description": "All not allowed products",
            "example": ["names of the products"]
          }
        }
      },
      "DailyRateRegUserResponse": {
        "type": "object",
        "properties": {
          "kcalLeft": {
            "type": "number",
            "description": "Calories left",
            "example": "1250"
          },
          "kcalConsumed": {
            "type": "number",
            "description": "Calories consumed",
            "example": "250"
          },
          "dailyRate": {
            "type": "number",
            "description": "Total calories",
            "example": "1500"
          },
          "percentsOfDailyRate": {
            "type": "number",
            "description": "Percent of daily rate",
            "example": "percent"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "60fd86dc70c2653e78ec10dq"
          },
          "notAllowedProducts": {
            "type": "array",
            "description": "All not allowed products",
            "example": ["names of the products"]
          },
          "notAllowedProductsAll": {
            "type": "array",
            "description": "All not allowed products",
            "example": ["names of the products"]
          }
        }
      },
      "DayAddProductRequest": {
        "type": "object",
        "required": ["date", "productId", "weight "],
        "properties": {
          "date": {
            "type": "string",
            "description": "Day",
            "example": "2021-07-25"
          },
          "productId": {
            "type": "string",
            "description": "Product's id",
            "example": "5d51694802b2373622ff553b"
          },
          "weight": {
            "type": "number",
            "description": "Product's weight",
            "example": "100"
          }
        }
      },
      "DayAddProductResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "user's id",
            "example": "60fd86dc70c2653e78ec10dq"
          },
          "date": {
            "type": "string",
            "description": "Day",
            "example": "2021-07-25"
          },
          "eatenProduct": {
            "type": "string",
            "description": "eaten product",
            "example": "name of eaten product"
          },
          "weight": {
            "type": "number",
            "description": "Product's weight",
            "example": "100"
          }
        }
      },
      "DayDeleteProductRequest": {
        "type": "object",
        "required": ["dayId", "eatenProductId "],
        "properties": {
          "dayId": {
            "type": "string",
            "description": "Day's id",
            "example": "5d51694802b2373622ff556b"
          },
          "eatenProductId": {
            "type": "string",
            "description": " Eaten product's id",
            "example": "5d51694802b2373622ff553b"
          }
        }
      },
      "DayDeleteProductResponse": {
        "type": "object",
        "properties": {
          "dayId": {
            "type": "string",
            "description": "day's id",
            "example": "60fd86dc70c2653e78ec10dq"
          },
          "kcalLeft": {
            "type": "number",
            "description": "calories left",
            "example": "1250"
          },
          "kcalConsumed": {
            "type": "number",
            "description": "calories consumed",
            "example": "250"
          },
          "dailyRate": {
            "type": "number",
            "description": "total calories",
            "example": "1500"
          },
          "percentsOfDailyRate": {
            "type": "number",
            "description": "percent of daily rate",
            "example": "percent"
          },
          "updatedEatenProducts ": {
            "type": "array",
            "description": "updated list of eaten products",
            "example": ["updated products"]
          }
        }
      },
      "DateRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "date",
            "example": "2021-07-25"
          }
        }
      },
      "DateResponse": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Day's date",
            "example": "2020-12-30"
          },
          "eatenProducts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "eaten product id",
                  "example": "6101ab90d1f44f5468d7ef12"
                },
                "title": {
                  "type": "string",
                  "description": "name of the eaten product",
                  "example": "Омлет из яичного порошка"
                },
                "weight": {
                  "type": "number",
                  "description": "weight of eaten product",
                  "example": "200"
                },
                "kcal": {
                  "type": "number",
                  "description": "calories of eaten product",
                  "example": "400"
                }
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "day id",
            "example": "6101ab03d1f44f5468d7eefd"
          }
        },
        "daySummary": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kcalLeft": {
                "type": "number",
                "description": "calories left",
                "example": "827.75"
              },
              "kcalConsumed": {
                "type": "number",
                "description": "consumed calories",
                "example": "800"
              },
              "dailyRate": {
                "type": "number",
                "description": "daily rate",
                "example": "1627.75"
              },
              "percentsOfDailyRate": {
                "type": "number",
                "description": "percents of daily rate",
                "example": "49.14759637536476"
              }
            }
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "user's id",
            "example": "60fd86dc70c2653e78ec10dq"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
